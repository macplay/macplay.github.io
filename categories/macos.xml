<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MacPlay (Posts about macos)</title><link>https://macplay.github.io/</link><description></description><atom:link href="https://macplay.github.io/categories/macos.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2020 &lt;a href="mailto:ashfinal@sina.cn"&gt;ashfinal&lt;/a&gt; </copyright><lastBuildDate>Wed, 26 Aug 2020 08:50:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>迁移到 onivim</title><link>https://macplay.github.io/posts/qian-yi-dao-onivim/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;!-- vim:set et sw=4 ts=4 ft=rst: --&gt;
&lt;!-- vim:set et sw=4 ts=4 ft=rst: --&gt;
&lt;!-- This file interpreters the title of URL in links.ref --&gt;
&lt;!-- vim:set et sw=4 ts=4 ft=rst: --&gt;
&lt;p&gt;关注 &lt;a class="reference external" href="https://github.com/onivim/oni"&gt;Oni: Modern Modal Editing - powered by Neovim&lt;/a&gt; 有一段时间了。根据主页描述，Oni 是个基于 Electron 技术实现的 Neovim 前端，对 &lt;a class="reference external" href="https://langserver.org/"&gt;Language Server Protocol&lt;/a&gt; 支持很全面。不过，之前使用 &lt;a class="reference external" href="https://github.com/qvacua/vimr"&gt;VimR&lt;/a&gt; 还算舒心，而 Oni 则起步较晚，一些功能还不完善。因此并没有动迁移的念头。&lt;/p&gt;
&lt;p&gt;不过最近几天在折腾 &lt;a class="reference external" href="https://macplay.github.io/categories/manjaro/"&gt;manjaro&lt;/a&gt; ，当寻找 Linux 下的 Neovim 前端时，试用了一圈竟然没有一个好用的！或多或少都存在一些问题。于是，无奈之下，我在 U 盘的 manjaro 操作系统上尝试了“臃肿”的 Electron 编辑器。其结果是出乎我意料之外的：Oni 已经达到了日常堪用的水平，而且与我之前的 vimrc 配置协作良好。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/qian-yi-dao-onivim/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>macos</category><category>manjaro</category><category>onivim</category><category>vim</category><category>vimrc</category><guid>https://macplay.github.io/posts/qian-yi-dao-onivim/</guid><pubDate>Thu, 15 Mar 2018 10:08:03 GMT</pubDate></item><item><title>免费辞典 Terminology for macOS</title><link>https://macplay.github.io/posts/mian-fei-zi-dian-terminology-for-macos/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;寻找 &lt;a class="reference external" href="https://www.enlightenment.org/about-terminology"&gt;Terminology 终端&lt;/a&gt; 相关资料时，搜索结果里意外瞥见了 Terminology for OS X Dictionary。点击一看，发现竟然是著名软件 Drafts 作者搞的。根据介绍，Terminology for OS X Dictionary 基于 WordNet 语意索引。WordNet 语意索引估计不少人听说过，理论上应该能提供更多更准确的字词释义。于是不再犹豫，果断下载安装。&lt;/p&gt;
&lt;p&gt;轻度使用两天，说下大概体验：词汇量确实比系统内置的辞典高出不少，系统辞典里找不到翻译的一些字词在 Terminology 中能找到；更重要的是，Terminology 根据语意把一堆相关的字词都显示出来，把你知道的不知道的单词连成一片，这样方便联想记忆互相理解，在不知不觉中提升词汇量。&lt;/p&gt;
&lt;p&gt;Terminology 应该没有版权方面的顾虑。因为只是一个辞典包，毋需安装，复制到对应目录就可以在字典 app 及 QuickLook 中调用。还是借用官方截图说明一下吧：&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="/images/terminology_dictionary.png" src="https://macplay.github.io/images/terminology_dictionary.png"&gt;
&lt;/div&gt;
&lt;p&gt;补充一点：从 「for OS X」这名字也能看出来，这辞典包可能有些年头了。但 macOS 的辞典格式这么多年也没变过，所以正常使用是没有问题的。一点小瑕疵是：显示字体和内置辞典略有不同，还算可以接受吧。&lt;/p&gt;
&lt;p&gt;Terminology for OS X Dictionary 的下载地址： &lt;a class="reference external" href="https://agiletortoise.com/terminology/mac/"&gt;https://agiletortoise.com/terminology/mac/&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>english</category><category>macos</category><category>terminology</category><guid>https://macplay.github.io/posts/mian-fei-zi-dian-terminology-for-macos/</guid><pubDate>Mon, 26 Feb 2018 09:55:07 GMT</pubDate></item><item><title>macOS 的文本替换功能</title><link>https://macplay.github.io/posts/macos-de-wen-ben-ti-huan-gong-neng/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;前一段时间抹盘重装了 High Sierra 系统，发现之前定义好的文本替换全丢了。ᔪ(°ᐤ°)ᔭᐤᑋᑊ̣心想可能是 iCloud 抽风，过几天就同步过来了。然而，等到今天也没见同步过来。多半是永远也过不来了。这造成了非常严重的后果：我无法使用文本替换轻松输入特殊符号，也无法在打字聊天的时候输入颜文字卖萌了！(&amp;gt;_&amp;lt;)ͪͨͧͦ 趁着今天有空，我决定解决掉这个问题。&lt;/p&gt;
&lt;p&gt;首先还是网络搜索了一下，看看文本替换功能是否支持导入导出，或者至少有个可备份的文件。否则，就算这次搞好也还是有数据丢失的风险，那过分依赖该功能就太不明智了。很快找到了来自苹果官方的结果： &lt;a class="reference external" href="https://support.apple.com/en-us/HT204006"&gt;How to export and import text substitutions on your Mac&lt;/a&gt; 。根据这份帮助手册，文本替换是支持导入导出的，而且操作很简单。只需在文本替换 tab 页选中要导出的条目，将其拖放到桌面就会自动生成 &lt;cite&gt;Text Substitutions.plist&lt;/cite&gt; 文件。而要导入数据的话，则直接把该文件拖回到文本替换 tab 页即可。是不是很简单？(ˊo̴̶̷̤⌄o̴̶̷̤ˋ)✧&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/macos-de-wen-ben-ti-huan-gong-neng/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>ime</category><category>macos</category><guid>https://macplay.github.io/posts/macos-de-wen-ben-ti-huan-gong-neng/</guid><pubDate>Fri, 24 Nov 2017 10:28:19 GMT</pubDate></item><item><title>不一样的 Git 客户端——GitUp</title><link>https://macplay.github.io/posts/bu-yi-yang-de-git-ke-hu-duan-gitup/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;尽管平时基本不使用 Git 客户端（偶尔用用 &lt;a class="reference external" href="https://jonas.github.io/tig/"&gt;Tig&lt;/a&gt; ），不过看到 &lt;a class="reference external" href="http://gitup.co"&gt;GitUp&lt;/a&gt; 的特性介绍，笔者还是产生了浓厚的兴趣。下载下来尝试了一下，感觉与其它 Git 客户端的确有些不一样。官方宣传声称 &lt;a class="reference external" href="http://gitup.co"&gt;GitUp&lt;/a&gt; 就是“你朝思暮想的 Git 客户端”（The Git interface you've been missing）；使用 &lt;a class="reference external" href="http://gitup.co"&gt;GitUp&lt;/a&gt; 以后，再也“不必头痛 Git 版本管理”（without headaches）。那么， &lt;a class="reference external" href="http://gitup.co"&gt;GitUp&lt;/a&gt; 究竟表现如何？接下来，随笔者一起来看看这个不一样的 Git 客户端吧。&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://macplay.github.io/images/gitup_overview.png"&gt;&lt;img alt="/images/gitup_overview.thumbnail.png" src="https://macplay.github.io/images/gitup_overview.thumbnail.png"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/bu-yi-yang-de-git-ke-hu-duan-gitup/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>macos</category><category>vc</category><guid>https://macplay.github.io/posts/bu-yi-yang-de-git-ke-hu-duan-gitup/</guid><pubDate>Wed, 08 Nov 2017 08:54:09 GMT</pubDate></item><item><title>如何制作 OS X Yosemite 系统安装盘</title><link>https://macplay.github.io/posts/ru-he-zhi-zuo-os-x-yosemite-xi-tong-an-zhuang-pan/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;最近在等 Yosemite 10.10.2 正式版推出，然后给手头的小白来个抹盘纯净重装。当然前提是需要可启动的系统安装盘，趁有空整理一下之前搜集的网上资料。&lt;/p&gt;
&lt;p&gt;制作启动盘的方法主要参考 &lt;a href="http://lifehacker.com/how-to-burn-os-x-yosemite-to-a-usb-flash-drive-1647137212" title="http://lifehacker.com/how-to-burn-os-x-yosemite-to-a-usb-flash-drive-1647137212"&gt;lifehacker&lt;/a&gt; 和 &lt;a href="http://www.pc6.com/edu/69791.html" title="http://www.pc6.com/edu/69791.html"&gt;pc6&lt;/a&gt; 的两篇文章，加上个人折腾的一点心得。&lt;/p&gt;
&lt;p&gt;首先你需要准备Yosemite系统镜像，只要之前通过苹果应用商店升级的话，都能非常方便地在&lt;code&gt;已购&lt;/code&gt;选项卡中找到镜像并下载。按以往的经验应用商店的下载速度还是比较快的，如果下载过程中无聊可以去忙点别的事情。下载完成后镜像会出现在 &lt;code&gt;Applications&lt;/code&gt; 文件夹，注意千万不要点升级就行。接下来就是比较重要的制作过程：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/ru-he-zhi-zuo-os-x-yosemite-xi-tong-an-zhuang-pan/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>macos</category><category>terminal</category><guid>https://macplay.github.io/posts/ru-he-zhi-zuo-os-x-yosemite-xi-tong-an-zhuang-pan/</guid><pubDate>Mon, 28 Dec 2015 07:03:41 GMT</pubDate></item><item><title>截图这件小事：使用 AppleScript 增强系统截图功能</title><link>https://macplay.github.io/posts/jie-tu-zhe-jian-xiao-shi-shi-yong-applescript-zeng-qiang-xi-tong-jie-tu-gong-neng/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;h3 id="_1"&gt;引言&lt;/h3&gt;
&lt;p&gt;众所周知，Mac OS X 系统自带截图功能已经足够强大。默认情况下按下 &lt;code&gt;⌘ + ⇧ + 4&lt;/code&gt; 快捷键即可对屏幕截图，还可使用辅助键进行模式切换、锁定高宽比、输出到剪贴板 …… 等操作。然而如果你想额外进行一些简单调整，比如改变默认存储位置、修改格式等等，则会发现困难好多：需要打开终端输入 &lt;code&gt;defaults write …&lt;/code&gt; 等类似的命令。而实际上只要你稍微简单了解下 AppleScript ，即可轻松高度定制截图设置。&lt;/p&gt;
&lt;p&gt;具体到笔者的情况，个人并不喜欢默认的文件命名方式，希望所有的截图能单独归类到某文件夹，而不是全部散落在桌面，希望截图完毕后立刻检视是否有瑕疵，并根据需要进行加字、标记等简单操作，使用 markdown 语法插入图片时能更流畅自然些，而不必中途切出去再复制一遍截图文件名 …… 等等。于是趁空使用 AppleScript 实现了以上功能，近两天则将其配置选项独立出来，方便更多人根据需求来定制。其最终结果就是大家现在所看到的 &lt;code&gt;Capture Screen with Extended Features.workflow&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/jie-tu-zhe-jian-xiao-shi-shi-yong-applescript-zeng-qiang-xi-tong-jie-tu-gong-neng/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>applescript</category><category>macos</category><guid>https://macplay.github.io/posts/jie-tu-zhe-jian-xiao-shi-shi-yong-applescript-zeng-qiang-xi-tong-jie-tu-gong-neng/</guid><pubDate>Thu, 14 May 2015 07:17:02 GMT</pubDate></item><item><title>AppleScript － ImageMagick 图像处理脚本</title><link>https://macplay.github.io/posts/applescript-imagemagick-tu-xiang-chu-li-jiao-ben/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;最近在学习 ImageMagick 图像处理命令，在微博上以 &lt;a href="http://huati.weibo.com/k/ImageMagick%E6%AF%8F%E6%97%A5%E6%8A%80%E5%B7%A7?from=501" title="http://huati.weibo.com/k/ImageMagick每日技巧?from=501"&gt;#ImageMagick每日技巧#&lt;/a&gt; 为标签分享了一些内容。觉得 ImageMagick 真的是很强大的工具，于是趁空闲尝试把几行命令用 AppleScript 包装起来，就这样发布出来了 …… 当然这里分享的仅是个人觉得有点难记的命令，简单的直接终端里敲就可以。下载链接在这里： &lt;a href="http://pan.baidu.com/s/1eQD0TFk" title="http://pan.baidu.com/s/1eQD0TFk"&gt;ImageMagick app&lt;/a&gt; ，&lt;strong&gt;运行需要 ImageMagick 命令行支持&lt;/strong&gt;，推荐使用 brew 进行安装：&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;brew install imagemagick&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;安装完成版本应该是 &lt;code&gt;6.9.1-0&lt;/code&gt; ，执行路径为 &lt;code&gt;/usr/local/Cellar/imagemagick/6.9.1-0/bin/&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/applescript-imagemagick-tu-xiang-chu-li-jiao-ben/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>applescript</category><category>imagemagick</category><category>macos</category><guid>https://macplay.github.io/posts/applescript-imagemagick-tu-xiang-chu-li-jiao-ben/</guid><pubDate>Sat, 28 Feb 2015 06:52:40 GMT</pubDate></item><item><title>Web Clip &amp; Shared Links - Mac OS X 轻量级的信息订阅工具</title><link>https://macplay.github.io/posts/web-clip-shared-links-mac-os-x-qing-liang-ji-de-xin-xi-ding-yue-gong-ju/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;事情起因是这样的：前两天有人反馈博客不支持 RSS 订阅功能。笔者一寻思，貌似 RSS 订阅确实是博客必备哈。可是，leanote 目前本身并没有这一功能。于是，笔者转而寻找外部的 RSS Feed 生成工具。可是搜索半天，找到的要么是被墙访问速度慢，要么死贵需要付费(当然最终找到了够用的了)。小发呆了一会，突然转念一想，读者可能就是想在文章发布时能方便及时地知道么？使用系统自带的 Web Clip 功能就够用啦。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/web-clip-shared-links-mac-os-x-qing-liang-ji-de-xin-xi-ding-yue-gong-ju/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>macos</category><category>rss</category><guid>https://macplay.github.io/posts/web-clip-shared-links-mac-os-x-qing-liang-ji-de-xin-xi-ding-yue-gong-ju/</guid><pubDate>Wed, 04 Feb 2015 07:34:49 GMT</pubDate></item><item><title>打造属于自己的多功能剪贴板 ClipMenu</title><link>https://macplay.github.io/posts/da-zao-shu-yu-zi-ji-de-duo-gong-neng-jian-tie-ban-clipmenu/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;h3 id="clipmenu"&gt;ClipMenu 初见&lt;/h3&gt;
&lt;p&gt;多功能剪贴板 &lt;a href="http://www.clipmenu.com" title="http://www.clipmenu.com"&gt;ClipMenu&lt;/a&gt; 初见印象并不深刻，笔者现在甚至只能隐约记得大约是在半年前安装到系统里的。安装的原因基本上是以前习惯所致，总觉得弄个增强剪贴板才心安。到网络搜索到 ClipMenu 体积小巧而且免费，就果断安装。然而安装后的半年多时间里，打开 ClipMenu 的次数屈指可数，很大一部分原因是没有那么多东西要复制粘贴，当然也有 ClipMenu 自身的原因：每次粘贴都要打开二级菜单实在太麻烦 …… 但是经历那么多次软件“清洗”，ClipMenu 一直稳当当地端坐在硬盘里没挪地儿。&lt;/p&gt;
&lt;p&gt;就这么彼此相安无事，无激情也无冲突。直到几天前开始搞博客主题、Markdown等，复制粘贴任务一下变得异常繁多。赶紧打开 ClipMenu 来用，然后发现原来烦人的二级菜单是可以设置的！又摸索了下其他设置，发现功能呢其实蛮强大的。到 &lt;a href="http://www.clipmenu.com" title="http://www.clipmenu.com"&gt;官网&lt;/a&gt; 查看，发现作者在用 Swift 语言开发下一版本。对其好感剧增，于是边用边折腾，现在已经设置为开机启动项。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/da-zao-shu-yu-zi-ji-de-duo-gong-neng-jian-tie-ban-clipmenu/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>clipboard</category><category>macos</category><guid>https://macplay.github.io/posts/da-zao-shu-yu-zi-ji-de-duo-gong-neng-jian-tie-ban-clipmenu/</guid><pubDate>Sun, 25 Jan 2015 04:04:16 GMT</pubDate></item><item><title>如何制作和更换 macOS 应用图标</title><link>https://macplay.github.io/posts/ru-he-zhi-zuo-he-geng-huan-macos-ying-yong-tu-biao/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;参考文章来自 &lt;a href="http://www.jianshu.com/p/2d21088a4439" title="http://www.jianshu.com/p/2d21088a4439"&gt;简书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大部分情况下OS X 的应用图标质量都过得去，并不会折磨你到发狂以至于产生要美化的念头，不过总有例外 …… 比如LICEcap。作为一款跨平台的优秀 GIF 录屏工具，之前 windows 系统时我就在用它。但是那时的美化冲动没现在这么强烈，切换到 OS X 平台后那老旧的图标显得那么格格不入。&lt;/p&gt;
&lt;p&gt;还有想要美化的软件就是 Sublime Text 3。其实平心而论 ST3 的图标还算可以，但是相对于其精美的 UI、漂亮的语法着色来说图标还是感觉差了一点点，而且作为一个 ST 衷心拥护者，但凡有折腾的空间是绝对不会放过的 :)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/posts/ru-he-zhi-zuo-he-geng-huan-macos-ying-yong-tu-biao/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>icns</category><category>macos</category><guid>https://macplay.github.io/posts/ru-he-zhi-zuo-he-geng-huan-macos-ying-yong-tu-biao/</guid><pubDate>Sat, 17 Jan 2015 06:21:07 GMT</pubDate></item></channel></rss>