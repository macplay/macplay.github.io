<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MacPlay (Posts about asciinema)</title><link>https://macplay.github.io/</link><description></description><atom:link href="https://macplay.github.io/en/categories/asciinema.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:ashfinal@sina.cn"&gt;ashfinal&lt;/a&gt; </copyright><lastBuildDate>Wed, 26 Aug 2020 08:50:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The power of diff</title><link>https://macplay.github.io/en/posts/the-power-of-diff/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;Lots of people use vimdiff to understand and handle diffs in console mode. While there exist more specialized tools for comparing files, vimdiff has always worked well enough for me.&lt;/p&gt;
&lt;div class="section" id="the-inefficiency-of-the-external-diff"&gt;
&lt;h2&gt;The inefficiency of the external diff&lt;/h2&gt;
&lt;p&gt;However, Vim’s diff mode was seriously lacking. This was basically because it needed to write down temporary files, shell out and run a manual diff command and parse the result back and as one can imagine, this could be slow and was seriously inefficient.&lt;/p&gt;
&lt;p&gt;Additionally, this required to have a diff binary available that was able to create &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Diff#Edit_script"&gt;ed like style diff&lt;/a&gt;, so one could not even fall-back to using git-diff (which is considered to have one of the best tested diff libraries and allows to select different algorithms) for creating those diffs. This lead to the creation of vimscript &lt;a class="reference external" href="https://github.com/chrisbra/vim-diff-enhanced"&gt;plugins&lt;/a&gt;, that would internally translate a unified diff back into an ed-like diff. Of course this would add an extra performance penalty.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/en/posts/the-power-of-diff/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>asciinema</category><category>diff</category><category>vim</category><guid>https://macplay.github.io/en/posts/the-power-of-diff/</guid><pubDate>Thu, 14 Nov 2019 14:28:48 GMT</pubDate></item><item><title>在 macOS 上使用 re-vim 配置</title><link>https://macplay.github.io/en/posts/zai-macos-shang-shi-yong-re-vim-pei-zhi/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;!-- vim:set et sw=4 ts=4 ft=rst: --&gt;
&lt;!-- vim:set et sw=4 ts=4 ft=rst: --&gt;
&lt;p&gt;使用 &lt;a class="reference external" href="https://macplay.github.io/categories/asciinema/"&gt;asciinema&lt;/a&gt; 详细讲解了在 macOS 上如何使用 &lt;a class="reference external" href="https://github.com/ashfinal/vimrc-config"&gt;re-vim&lt;/a&gt; 配置。&lt;/p&gt;
&lt;p&gt;涉及到 re-vim 30 秒快速部署、使用 brew 编译 vim、个性化定制 re-vim 等。&lt;/p&gt;
&lt;p&gt;录屏过程中展示了 re-vim 的部分功能，以及使用 re-vim 的一些注意事项。&lt;/p&gt;
&lt;p&gt;有点使用 asciinema 展示博客写作过程的感觉？&lt;/p&gt;
&lt;p&gt;可惜 asciinema 对中文支持还是有些小问题，不管怎样这算是一个很好的尝试。:)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/en/posts/zai-macos-shang-shi-yong-re-vim-pei-zhi/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://macplay.github.io/en/posts/zai-macos-shang-shi-yong-re-vim-pei-zhi/</guid><pubDate>Thu, 12 May 2016 13:31:51 GMT</pubDate></item><item><title>asciinema - 更炫酷地记录和分享终端操作</title><link>https://macplay.github.io/en/posts/asciinema-geng-xuan-ku-di-ji-lu-he-fen-xiang-zhong-duan-cao-zuo/</link><dc:creator>ashfinal</dc:creator><description>&lt;div&gt;&lt;p&gt;具体请访问官网： &lt;a href="https://asciinema.org"&gt;asciinema - Record and share your terminal sessions, the right way&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基于文本的录屏工具，对终端输入输出进行捕捉，然后以文本的形式来记录和回放！这使其拥有非常炫酷的特性：在“播放”过程中你随时可以暂停，然后对“播放器”中的文本进行复制或者其它操作！实际效果可以点击下方的播放按钮查看。&lt;/p&gt;
&lt;p&gt;具体原理简单点说，就是把终端显示和时间戳记录成 &lt;del&gt;json&lt;/del&gt; &lt;strong&gt;cast&lt;/strong&gt; 格式，然后使用 JavaScript 脚本解析出来。配合官方提供的 CSS 样式，乍看起来以为是视频播放器，然而它却是不折不扣的文本。相比视频录屏或 GIF 动图的方式，文件体积小的不可思议（比如以下时长 2:49 的录屏仅为 325KB ），不需缓冲即可播放，可以更方便的分享给他人或者嵌入到网页中。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://macplay.github.io/en/posts/asciinema-geng-xuan-ku-di-ji-lu-he-fen-xiang-zhong-duan-cao-zuo/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://macplay.github.io/en/posts/asciinema-geng-xuan-ku-di-ji-lu-he-fen-xiang-zhong-duan-cao-zuo/</guid><pubDate>Thu, 21 Apr 2016 13:34:12 GMT</pubDate></item></channel></rss>